<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunjz.account.mapper.TypeCategoryRelationMapper">
    
    <resultMap type="com.yunjz.account.domain.TypeCategoryRelation" id="TypeCategoryRelationResult">
        <result property="id"    column="id"    />
        <result property="typeId"    column="type_id"    />
        <result property="categoryId"    column="category_id"    />
        <result property="typeName"    column="type_name"    />
        <result property="categoryName"    column="category_name"    />
    </resultMap>

    <sql id="selectTypeCategoryRelationVo">
        select id, type_id, category_id, type_name, category_name from type_category_relation
    </sql>

    <select id="selectTypeCategoryRelationList" parameterType="com.yunjz.account.domain.TypeCategoryRelation" resultMap="TypeCategoryRelationResult">
        <include refid="selectTypeCategoryRelationVo"/>
        <where>  
            <if test="typeId != null "> and type_id = #{typeId}</if>
            <if test="categoryId != null "> and category_id = #{categoryId}</if>
            <if test="typeName != null  and typeName != ''"> and type_name like concat('%', #{typeName}, '%')</if>
            <if test="categoryName != null  and categoryName != ''"> and category_name like concat('%', #{categoryName}, '%')</if>
        </where>
    </select>
    
    <select id="selectTypeCategoryRelationById" parameterType="Long" resultMap="TypeCategoryRelationResult">
        <include refid="selectTypeCategoryRelationVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTypeCategoryRelation" parameterType="com.yunjz.account.domain.TypeCategoryRelation" useGeneratedKeys="true" keyProperty="id">
        insert into type_category_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeId != null">type_id,</if>
            <if test="categoryId != null">category_id,</if>
            <if test="typeName != null">type_name,</if>
            <if test="categoryName != null">category_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeId != null">#{typeId},</if>
            <if test="categoryId != null">#{categoryId},</if>
            <if test="typeName != null">#{typeName},</if>
            <if test="categoryName != null">#{categoryName},</if>
         </trim>
    </insert>

    <update id="updateTypeCategoryRelation" parameterType="com.yunjz.account.domain.TypeCategoryRelation">
        update type_category_relation
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeId != null">type_id = #{typeId},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="typeName != null">type_name = #{typeName},</if>
            <if test="categoryName != null">category_name = #{categoryName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTypeCategoryRelationById" parameterType="Long">
        delete from type_category_relation where id = #{id}
    </delete>

    <delete id="deleteTypeCategoryRelationByIds" parameterType="String">
        delete from type_category_relation where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteBatchRelation">
        delete from type_category_relation where
        <foreach collection="relations" item="item" separator=" or ">
            (category_id=#{item.categoryId} and type_id=#{item.typeId})
        </foreach>
    </delete>
</mapper>