<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunjz.account.mapper.UserBookRelationMapper">
    
    <resultMap type="com.yunjz.account.domain.UserBookRelation" id="UserBookRelationResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="bookId"    column="book_id"    />
        <result property="userName"    column="user_name"    />
        <result property="bookName"    column="book_name"    />
    </resultMap>

    <sql id="selectUserBookRelationVo">
        select id, user_id, book_id, user_name, book_name from user_book_relation
    </sql>

    <select id="selectUserBookRelationList" parameterType="com.yunjz.account.domain.UserBookRelation" resultMap="UserBookRelationResult">
        <include refid="selectUserBookRelationVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="bookId != null "> and book_id = #{bookId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="bookName != null  and bookName != ''"> and book_name like concat('%', #{bookName}, '%')</if>
        </where>
    </select>
    
    <select id="selectUserBookRelationById" parameterType="Long" resultMap="UserBookRelationResult">
        <include refid="selectUserBookRelationVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertUserBookRelation" parameterType="com.yunjz.account.domain.UserBookRelation" useGeneratedKeys="true" keyProperty="id">
        insert into user_book_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="bookId != null">book_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="bookName != null">book_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="bookId != null">#{bookId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="bookName != null">#{bookName},</if>
         </trim>
    </insert>

    <update id="updateUserBookRelation" parameterType="com.yunjz.account.domain.UserBookRelation">
        update user_book_relation
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="bookId != null">book_id = #{bookId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="bookName != null">book_name = #{bookName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserBookRelationById" parameterType="Long">
        delete from user_book_relation where id = #{id}
    </delete>

    <delete id="deleteUserBookRelationByIds" parameterType="String">
        delete from user_book_relation where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>